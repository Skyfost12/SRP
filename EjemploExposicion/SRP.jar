// Incorrecto
import java.util.List;

class Order {
    private List<String> items;
    private List<Double> prices;
    private double taxRate;

    public Order(List<String> items, List<Double> prices, double taxRate) {
        this.items = items;
        this.prices = prices;
        this.taxRate = taxRate;
    }

    public double calculateTotal() {
        double total = 0;
        for (double price : prices) {
            total += price;
        }
        double discount = 5;
        double tax = (total - discount) * taxRate;
        return total - discount + tax;
    }

    public String generateInvoice() {
        double total = calculateTotal();
        StringBuilder invoice = new StringBuilder("Factura:\n");
        for (int i = 0; i < items.size(); i++) {
            invoice.append(items.get(i)).append(": $").append(prices.get(i)).append("\n");
        }
        invoice.append("Total (incluyendo impuestos): $").append(total).append("\n");
        return invoice.toString();
    }

    public void sendConfirmationEmail(String email) {
        String invoice = generateInvoice();
        System.out.println("Enviando email a " + email + " con la siguiente Factura:\n" + invoice);
    }

    public double applyDiscount(double discount) {
        double total = 0;
        for (double price : prices) {
            total += price;
        }
        total -= discount;
        return total > 0 ? total : 0;
    }

    public static void main(String[] args) {
        List<String> items = List.of("Libro", "Lapicero");
        List<Double> prices = List.of(12.99, 0.99);
        Order order = new Order(items, prices, 0.1);
        System.out.println(order.calculateTotal());
        System.out.println(order.generateInvoice());
        order.sendConfirmationEmail("customer@example.com");
    }
}


// Correcto
import java.util.List;

class Order {
    private List<String> items;
    private List<Double> prices;

    public Order(List<String> items, List<Double> prices) {
        this.items = items;
        this.prices = prices;
    }

    public double getSubtotal() {
        double subtotal = 0;
        for (double price : prices) {
            subtotal += price;
        }
        return subtotal;
    }

    public List<String> getItems() {
        return items;
    }

    public List<Double> getPrices() {
        return prices;
    }
}

class TaxCalculator {
    public double calculateTax(double subtotal, double taxRate) {
        return subtotal * taxRate;
    }
}

class DiscountManager {
    public double applyDiscount(double subtotal, double discount) {
        double total = subtotal - discount;
        return total > 0 ? total : 0;
    }
}

class InvoiceGenerator {
    public String generateInvoice(Order order, double subtotal, double tax, double total) {
        StringBuilder invoice = new StringBuilder("Factura:\n");
        List<String> items = order.getItems();
        List<Double> prices = order.getPrices();
        for (int i = 0; i < items.size(); i++) {
            invoice.append(items.get(i)).append(": $").append(prices.get(i)).append("\n");
        }
        invoice.append("Subtotal: $").append(subtotal).append("\n");
        invoice.append("Impuesto: $").append(tax).append("\n");
        invoice.append("Total (incluyendo impuestos): $").append(total).append("\n");
        return invoice.toString();
    }
}

class EmailSender {
    public void sendEmail(String email, String content) {
        System.out.println("Enviando email a " + email + " con el siguiente contenido:\n" + content);
    }
}

public class Main {
    public static void main(String[] args) {
        List<String> items = List.of("Libro", "Lapiz");
        List<Double> prices = List.of(12.99, 0.99);
        Order order = new Order(items, prices);

        TaxCalculator taxCalculator = new TaxCalculator();
        DiscountManager discountManager = new DiscountManager();
        InvoiceGenerator invoiceGenerator = new InvoiceGenerator();
        EmailSender emailSender = new EmailSender();

        double subtotal = order.getSubtotal();
        double discountedTotal = discountManager.applyDiscount(subtotal, 5);
        double tax = taxCalculator.calculateTax(discountedTotal, 0.1);
        double finalTotal = discountedTotal + tax;

        String invoice = invoiceGenerator.generateInvoice(order, subtotal, tax, finalTotal);
        emailSender.sendEmail("comprador@example.com", invoice);
    }
}
